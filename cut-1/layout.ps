%!
%!PS-Adobe-2.0
%%BoundingBox: 0 0 2297 1276
%%Pages: 1
%%BeginProlog
/inch 72 def
/mm_size inch 25.4 div def
/bdef { bind def } bind def
/inches { inch mul } bdef
/mm { mm_size mul } bdef
/thickness 2.2 mm def
/up { 0 exch rlineto } bdef  /right { 0 rlineto } bdef
/down { neg up } bdef        /left { neg right } bdef
/box { dup up  exch right  down  closepath } bdef
%%EndProlog

%%Page: 1 1
save
20 20 translate
0 0 moveto
/width 512 mm def
/height 384 mm def
width height box stroke
/rect { 0 0 moveto box stroke } bdef
/stevia { 52 mm 52 mm rect } bdef
/napkinbox { 109 mm 65 mm rect } bdef
gsave 
    8 mm 65 mm add  66 mm 20 mm add  translate 90 rotate napkinbox
grestore
/diameter-circle {
    2 div dup dup               % centerx centery r
    0 360 arc
} bdef
/herbalife-jar { 100 mm diameter-circle stroke } bdef
/jar-spacing 105 mm def
/herbalife-row {
        gsave { herbalife-jar jar-spacing 0 translate } repeat grestore
        jar-spacing 2 div  jar-spacing -60 sin mul  translate
} bdef
/herbalife-triangle { gsave 4 -1 1 { herbalife-row } for grestore } bdef
gsave
    5 mm 279 mm translate herbalife-triangle
grestore
/spice-jar { 69 mm diameter-circle stroke } bdef
gsave
    430 mm 8 mm translate
    gsave 3 { spice-jar -74 mm 0 translate } repeat grestore
    0 74 mm translate spice-jar
grestore
/oil-bottle { 68 mm diameter-circle stroke } bdef
gsave 439 mm 310 mm translate oil-bottle grestore
gsave
    width 57 mm sub 5 mm sub  250 mm translate  stevia
    0 -58 mm translate stevia
grestore
/salt-jar { 56 mm diameter-circle stroke } bdef
gsave
    width 57 mm sub  56 mm sub  5 mm sub  8 mm sub  224 mm translate
    salt-jar
grestore
/tea-box { 132 mm 72 mm rect } bdef
gsave 8 mm 8 mm translate tea-box grestore

/hline {
    gsave 1 0 0 setrgbcolor 0 exch moveto width 0 rlineto stroke grestore
} bdef
330 mm hline
270 mm hline
235 mm hline
210 mm hline
140 mm hline
115 mm hline
64 mm hline
20 mm hline

/vline {
    gsave 1 0 0 setrgbcolor 0 moveto 0 height rlineto stroke grestore
} bdef
48 mm vline
159.5 mm vline
265 mm vline
374 mm vline
472 mm vline

% Okay, now what?  I have a layout for the supports of the shelving,
% but now I need to convert it into a layout for laser-cutting.  And
% fast!  I need to sleep tonight!  That means I need to find the
% intersections between the bottles and whatnot and the support lines,
% as well as the intersections between the support lines themselves,
% in order to figure out how to do a laser-cutting layout for them.

% One way to do that would be to move the above page and a half of
% code specifying where things are into another language, such as
% Python or JS, and then do the calculations there.  A different, more
% incremental way to do it would be to augment the definitions of
% hline, vline, rect, and diameter-circle to store these calculations.

% Probably the first approach is better, for a couple of reasons.
% First, data structures in PostScript are kind of a pain, because
% although you have dicts and everything, everything has to be
% preallocated.  Second, the feedback cycle in PostScript is never
% going to be very good; I’m already at 7 seconds latency on this
% netbook to see what I’m doing, I can’t see what I’m doing while I’m
% doing it, and it’s just going to get worse from here; while on the
% other hand, Python and especially JS have very easy ways to make
% things appear on the screen and like move them around and shit.
% Third, I feel that PostScript is harder to read than the other
% languages.

% ...and yet I have left this sit for hours while reading Existential
% Comics.

restore
showpage
%%EOF
